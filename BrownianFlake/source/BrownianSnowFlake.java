/* autogenerated by Processing revision 1293 on 2024-04-17 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class BrownianSnowFlake extends PApplet {

Particle current; 
ArrayList <Particle> snowflake;

public void setup() {
  /* size commented out by preprocessor */;
  //fullScreen();
  current = new Particle(width/2, 0);
  snowflake = new ArrayList<Particle>();
}

public void draw() {
  translate(width/2, height/2);
  rotate(PI/6);
  background(0);

  while (!current.finished() && !current.intersects(snowflake)) {
    current.update();
  }
    snowflake.add(current);
    current = new Particle(width/2, 0);
  
  
  
  for (int i = 0; i < 6; i++) {
    rotate(PI/3);
    current.show();
    for (Particle p : snowflake) {
      p.show();
    }
    
    pushMatrix();
    scale(1, -1);
    current.show();
    for (Particle p : snowflake) {
      p.show();
    }
    popMatrix();
    
    
  }
  
}
class Particle {
  PVector pos ;
  float r;
  
  Particle(float x, float y) {
    pos = new PVector(x, y);
    r = 3;
  }
  
  public void update() {
    pos.x -= 1;
    pos.y += random(-5, 5);
    
    float angle = pos.heading();
    angle = constrain(angle, 0, PI/6);
    float magnitude = pos.mag();
    pos = PVector.fromAngle(angle);
    pos.setMag(magnitude);
    
  }
  
  public void show() {
    fill(255);
    stroke(255);
    strokeWeight(0.01f);
    ellipse(pos.x, pos.y, r*2/2, r*2/2);
  }
  
  public boolean intersects(ArrayList<Particle> snowflake) {
    boolean result = false;
    for (Particle s : snowflake) {
      float d = dist(s.pos.x, s.pos.y, this.pos.x, this.pos.y);
      if (d < r*2) {
        result = true;
        break;
      }
    }
    
    return result;
  }
  
  public boolean finished() {
    return (pos.x < 1);
  }

}


  public void settings() { size(600, 600); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "BrownianSnowFlake" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
